name: Azure Pipelines

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - test-pool.yaml

# ToDo: Replace the agent pool name, if you are using Udacity Cloud lab. 
# Otherwise, comment out the line below. 
# pool: myAgentPool

variables:
  python.version: '3.7.6'
  # ToDo: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: 'UdacityDS-51'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Environment name
  environmentName: 'test'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Agemt pool name
  agentPoolName: 'Default'

stages:
# - stage: Pool_Tests
#   jobs:
#   - deployment: Pool_Tests
#     environment:
#       name:  'test'
#       resourceType: VirtualMachine
#     # pool: $(agentPoolName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           # - task: Bash@3
#           #   displayName: Pool
#           #   inputs:
#           #     targetType: 'inline'
#           #     script: |
#           #       echo "hello world"
#           #       curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
#           #       sudo apt-get install -y nodejs=16.20.2-1nodesource1
          
#           # - task: CmdLine@2
#           #   displayName: Install Newman
#           #   inputs:
#           #     script: 'sudo npm install -g newman'
#           #     workingDirectory: $(System.DefaultWorkingDirectory)
#           - task: Bash@3
#             displayName: Install Java 8
#             inputs:
#               targetType: 'inline'
#               script: |
#                 sudo apt-get update
#                 sudo apt-get install openjdk-8-jdk -y
#                 export HEAP="-Xms1g -Xmx1g"
#           - task: JMeterInstaller@0
#             inputs:
#               jmeterVersion: '5.6.3'

- stage: JmeterTests
  jobs:
  - job: JmeterTests
    pool: $(agentPoolName)
    steps:
    - task: Bash@3
      displayName: Install Java 8
      inputs:
        targetType: 'inline'
        script: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jdk -y
    - task: JMeterInstaller@0
      inputs:
        jmeterVersion: '5.6.3'
    - task: Bash@3
      displayName: stressTest
      inputs:
        targetType: 'inline'
        script: |
          jmeter -n -t automatedtesting/jmeter/stressTest.jmx \
              -l log/jmeter/stress_test_result.csv \
              -e -f -o log/jmeter/stress_test_html_report \
              -j log/jmeter/jmeter_stress_test.log
    - task: Bash@3
      displayName: enduranceTest
      inputs:
        targetType: 'inline'
        script: |
          jmeter -n -t automatedtesting/jmeter/enduranceTest.jmx \
              -l log/jmeter/endurance_test_result.csv \
              -e -f -o log/jmeter/endurance_test_html_report \
              -j log/jmeter/jmeter_endurance_test.log
    - task: ArchiveFiles@2
      displayName: Save JMeter Stress Test Report to Artifact
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/log/jmeter/stress_test_html_report'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(System.DefaultWorkingDirectory)/log/jmeter/stress_test_html_report-$(Build.BuildId).zip'
        verbose: true
    - task: ArchiveFiles@2
      displayName: Save JMeter Endurance Test Report to Artifact
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/log/jmeter/endurance_test_html_report'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(System.DefaultWorkingDirectory)/log/jmeter/endurance_test_html_report-$(Build.BuildId).zip'
        verbose: true
    - task: PublishPipelineArtifact@1
      displayName: Publish JMeter Logs
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/log/jmeter'
        artifactName: 'drop-jmeter-logs'